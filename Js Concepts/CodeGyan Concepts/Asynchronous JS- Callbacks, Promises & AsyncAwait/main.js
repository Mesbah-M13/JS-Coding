function main() {
  console.log("1st log");
  console.log("2nd log");
  console.log("3rd log");
  console.log("4th log");
  // this is synchronous execution & single thread machanism
}
// main()

function checkInventory() {
  console.log("Checking inventory üîÑÔ∏è");
}

function createOrder() {
  console.log("Creating an order üèóÔ∏è");
}

function chargePayment() {
  console.log("Charging the payment.... üí∏");
}

function sendInvoice() {
  console.log("Sending the invoice.... üëç");
}

function result() {
  checkInventory();
  createOrder();
  chargePayment();
  sendInvoice();

  // this is synchronous execution & single thread machanism
}
// result()

/*
Synchronous execution ‡¶è main thread block ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡ßü‡•§ ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ thead at a time
‡ßß‡¶ü‡¶æ console.log/task perform ‡¶ï‡¶∞‡¶§‡ßá‡¶õ‡ßá‡•§ ‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶∏‡¶Æ‡ßü thread offload/‡¶ñ‡¶æ‡¶≤‡¶ø
‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ø‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶§‡¶æ thread ‡¶è‡¶∞ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

‡¶è‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶π‡ßü asynchronous execution ‡¶è‡¶∞
 
network call/ asynchronous I/O --> db call, disk read , fs call
*/

/*
*** ‡¶ï‡ßã‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßá asynchronous ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶π‡¶ú ‡¶â‡¶™‡¶æ‡ßü ‡¶π‡¶≤‡ßã timer use ‡¶ï‡¶∞‡¶æ‡•§
  - setTimeout
*/

function checkInventory() {
  setTimeout(() => {
    console.log("Checking inventory . üîÑÔ∏è");
  }, 3000);
}

function createOrder() {
  setTimeout(() => {
    console.log("Creating an order .. üèóÔ∏è");
  }, 2000);
}

function chargePayment() {
  setTimeout(() => {
    console.log("Charging the payment ... üí∏");
  }, 1000);
}

function sendInvoice() {
  setTimeout(() => {
    console.log("Sending the invoice .... üëç");
  }, 1000);
}

function asyncRsult() {
  checkInventory();
  createOrder();
  chargePayment();
  sendInvoice();
  console.log('Other request processing as nothing has blocked');
}

asyncRsult()